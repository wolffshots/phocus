name: phocus

on: 
  workflow_dispatch:
  push:
    paths-ignore:
      - 'web/**'
      - '.github/workflows/svelte.yml'
      - 'LICENSE'
      - '*.md'
      - '*.example'
      - '.vscode'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ./phocus
        key: ${{ runner.os }}-go--${{ hashFiles('**/go.sum') }}--${{ hashFiles('**/*.sh') }}--${{ hashFiles('./.github/workflows/*.yml') }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.21.9

    - name: Build for linux/arm
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Current tag is $TAG_NAME"
          env GOOS=linux GOARCH=arm GOARM=6 go build -ldflags="-X 'main.version=$TAG_NAME' -s -w" -o ./phocus -v main.go
        else
          echo "Not on a tag. The commit SHA is $GITHUB_SHA"
          env GOOS=linux GOARCH=arm GOARM=6 go build -ldflags="-X 'main.version=$GITHUB_SHA' -s -w" -o ./phocus -v main.go
        fi
      env:
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ./phocus
        key: ${{ runner.os }}-go--${{ hashFiles('**/go.sum') }}--${{ hashFiles('**/*.sh') }}--${{ hashFiles('./.github/workflows/*.yml') }}

    - name: Install socat
      run: sudo apt-get install -y socat

    - name: Test with coverage profile
      run: go test -v ./... -coverprofile=coverage.txt

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.1.0
      with:
        # Repository Codecov token. Used to authorize report uploads
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        # API project token to retrieve your remote Codacy configuration for the project being analyzed
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        # Optional comma separated list of coverage reports to send to Codacy
        coverage-reports: coverage.txt
        # Optionally force associating a language with your coverage report
        language: go
        # Optionally force using a specific coverage report parser
        force-coverage-parser: go

  upload:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: [test, build]
    steps:
    - uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ./phocus
        key: ${{ runner.os }}-go--${{ hashFiles('**/go.sum') }}--${{ hashFiles('**/*.sh') }}--${{ hashFiles('./.github/workflows/*.yml') }}
    
    - name: Upload a Build Artifact for main
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main'
      with:
        name: phocus
        path: |
          phocus
          phocus.service
          config.json.example

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: |
          Note: this was an autogenerated release based on a workflow and the executable is for linux/arm by default.
        draft: false
        generate_release_notes: true
        files: |
          phocus
          phocus.service
          config.json.example
